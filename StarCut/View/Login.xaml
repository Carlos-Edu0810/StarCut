<Window x:Class="StarCut.View.Login"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:StarCut.View"
        mc:Ignorable="d"
        Title="Login StarCut" Height="450" Width="800"
        ResizeMode="CanMinimize"
        WindowStartupLocation="CenterScreen">
    <!-- Impede a maximização da janela -->
    <!-- Centraliza a janela na tela -->

    <Window.Resources>
        <!-- Definição das cores da paleta para uso fácil -->
        <SolidColorBrush x:Key="PrimaryBackgroundColor" Color="#0F0A3D"/>
        <!-- Azul Escuro/Noite Profunda -->
        <SolidColorBrush x:Key="AccentColor" Color="#6A0DAD"/>
        <!-- Roxo Vibrante -->
        <SolidColorBrush x:Key="HighlightColor" Color="#E03B8A"/>
        <!-- Rosa/Fúcsia (Detalhes) -->
        <SolidColorBrush x:Key="TextColor" Color="White"/>
        <!-- Texto branco para contraste -->
        <SolidColorBrush x:Key="PlaceholderColor" Color="#BBBBBB"/>
        <!-- Cor para texto placeholder -->

        <!-- Estilo básico para TextBlock de títulos -->
        <Style x:Key="TitleTextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="28"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0 0 0 30"/>
        </Style>

        <!-- Estilo para TextBlock de labels de formulário -->
        <Style x:Key="LabelTextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="Margin" Value="0 10 0 5"/>
        </Style>

        <!-- Estilo para TextBox com Placeholder -->
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Height" Value="35"/>
            <Setter Property="Padding" Value="10 0 0 0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="#2E2360"/>
            <!-- Um tom um pouco mais claro do fundo para os campos -->
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="0 0 0 10"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="8"
                                    SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <!-- Placeholder TextBlock -->
                            <TextBlock x:Name="Placeholder" IsHitTestVisible="False" Opacity="0.5"
                                       Foreground="{StaticResource PlaceholderColor}"
                                       Text="{TemplateBinding Tag}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       Margin="{TemplateBinding Padding}">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Estilo para PasswordBox com Placeholder (estilo independente) -->
        <Style TargetType="{x:Type PasswordBox}">
            <Setter Property="Height" Value="35"/>
            <Setter Property="Padding" Value="10 0 0 0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="#2E2360"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="0 0 0 10"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Grid>
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="8"
                                    SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <!-- Placeholder TextBlock para PasswordBox -->
                            <TextBlock x:Name="Placeholder" IsHitTestVisible="False" Opacity="0.5"
                                       Foreground="{StaticResource PlaceholderColor}"
                                       Text="{TemplateBinding Tag}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       Margin="{TemplateBinding Padding}">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <!-- Usa um MultiDataTrigger para verificar se o PasswordBox está vazio -->
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text.IsEmpty}" Value="True" />
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Password.IsEmpty}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Estilo para Botão de Login -->
        <Style TargetType="{x:Type Button}">
            <Setter Property="Height" Value="45"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="Background" Value="{StaticResource HighlightColor}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="10">
                            <!-- Cantos mais arredondados para o botão -->
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Margin" Value="0 20 0 0"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource AccentColor}"/>
                    <!-- Mudar cor ao passar o mouse -->
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Grid Background="{StaticResource PrimaryBackgroundColor}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <!-- Coluna para o formulário de login (esquerda) -->
            <ColumnDefinition Width="*"/>
            <!-- Coluna para a imagem (direita) -->
        </Grid.ColumnDefinitions>

        <!-- Formulário de Login (Esquerda) -->
        <StackPanel Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Width="300">
            <TextBlock Text="Bem-vindo ao StarCut!" Style="{StaticResource TitleTextBlockStyle}"/>
            <TextBlock x:Name="txtValid" Text="" FontSize="18" FontStyle="Normal" Foreground="red" Visibility="Collapsed"/>

            <TextBlock Text="Usuário:" Style="{StaticResource LabelTextBlockStyle}"/>
            <TextBox x:Name="UserTextBox" Tag="Digite seu usuário" AutomationProperties.Name="UserTextBox"/>

            <TextBlock Text="Senha:" Style="{StaticResource LabelTextBlockStyle}"/>
            <PasswordBox x:Name="UserPassordBox" Tag="Digite sua senha" AutomationProperties.Name="UserPasswordBox"/>

            <Button x:Name="LoginButton" Content="Entrar" AutomationProperties.Name="LoginButton" Click="Button_Click_1" />
            <!-- Você pode adicionar outros elementos aqui, como "Esqueceu a senha?" ou "Criar conta" -->
        </StackPanel>

        <!-- Imagem do Logo (Direita) -->
        <Border Grid.Column="1" Background="{StaticResource PrimaryBackgroundColor}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Image Source="/Resources/Images/StarCut_Logo.png"
                   Stretch="Uniform"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   RenderOptions.BitmapScalingMode="HighQuality"
                   Margin="20"/>
            <!--
            IMPORTANTE:
            - Verifique se a imagem 'StarCut_Logo.png' está no caminho '/Resources/Images/'
              no seu projeto WPF e se sua "Build Action" está definida como "Resource".
            -->
        </Border>
    </Grid>
</Window>
